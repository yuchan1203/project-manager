<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>프로젝트 기획서 관리</title>
    <script defer src="https://cdn.jsdelivr.net/npm/react@17/umd/react.production.min.js"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/react-dom@17/umd/react-dom.production.min.js"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/@babel/standalone/babel.min.js"></script>
    <style>
        body { font-family: Arial, sans-serif; padding: 20px; max-width: 600px; margin: auto; }
        .card { border: 1px solid #ccc; padding: 10px; margin: 10px 0; border-radius: 5px; }
        .input, .textarea { width: 100%; padding: 8px; margin-top: 5px; }
        .button { margin-top: 10px; padding: 10px; background: #007bff; color: white; border: none; cursor: pointer; }
        .button:hover { background: #0056b3; }
    </style>
</head>
<body>
    <h1>프로젝트 기획서 관리</h1>
    <div id="root"></div>
    <script type="text/babel">
        function ProjectManager() {
            const [projects, setProjects] = React.useState([]);
            const [newProject, setNewProject] = React.useState({ title: "", description: "", tags: "" });
            const [editingProject, setEditingProject] = React.useState(null);

            const addProject = () => {
                if (!newProject.title) return;
                setProjects([...projects, { ...newProject, id: Date.now() }]);
                setNewProject({ title: "", description: "", tags: "" });
            };

            const editProject = (id) => {
                const project = projects.find((p) => p.id === id);
                setEditingProject(project);
            };

            const saveProject = () => {
                setProjects(
                    projects.map((p) => (p.id === editingProject.id ? editingProject : p))
                );
                setEditingProject(null);
            };

            return (
                <div>
                    <input className="input" placeholder="프로젝트 제목" value={newProject.title} onChange={(e) => setNewProject({ ...newProject, title: e.target.value })} />
                    <textarea className="textarea" placeholder="프로젝트 설명" value={newProject.description} onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}></textarea>
                    <input className="input" placeholder="태그 (쉼표로 구분)" value={newProject.tags} onChange={(e) => setNewProject({ ...newProject, tags: e.target.value })} />
                    <button className="button" onClick={addProject}>추가</button>
                    {projects.map((project) => (
                        <div key={project.id} className="card">
                            {editingProject?.id === project.id ? (
                                <div>
                                    <input className="input" value={editingProject.title} onChange={(e) => setEditingProject({ ...editingProject, title: e.target.value })} />
                                    <textarea className="textarea" value={editingProject.description} onChange={(e) => setEditingProject({ ...editingProject, description: e.target.value })}></textarea>
                                    <input className="input" value={editingProject.tags} onChange={(e) => setEditingProject({ ...editingProject, tags: e.target.value })} />
                                    <button className="button" onClick={saveProject}>저장</button>
                                </div>
                            ) : (
                                <div>
                                    <h2>{project.title}</h2>
                                    <p>{project.description}</p>
                                    <p><small>태그: {project.tags}</small></p>
                                    <p><small>공유 링크: {window.location.origin}/project/{project.id}</small></p>
                                    <button className="button" onClick={() => editProject(project.id)}>수정</button>
                                </div>
                            )}
                        </div>
                    ))}
                </div>
            );
        }
        ReactDOM.render(<ProjectManager />, document.getElementById("root"));
    </script>
</body>
</html>
